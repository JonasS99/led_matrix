/*
 * Empty C++ Application
 */

#include <stdio.h>
#include "xparameters.h"
#include "xil_cache.h"
#include "xintc.h"
#include "xgpio.h"

#include "GUI.h"
#define DATA_VALID 2
#define LED_DATA 1
#define ADDRESS 1

XGpio GpioOutput0; /* The driver instance for GPIO Device configured as O/P */
XGpio GpioOutput1; /* The driver instance for GPIO Device configured as O/P */

int main()
{



	GUI_Init();


	Xil_ICacheEnable();
    Xil_DCacheEnable();

	/* init gpios */
	XGpio_Initialize(&GpioOutput0, XPAR_AXI_GPIO_0_DEVICE_ID);
	XGpio_Initialize(&GpioOutput1, XPAR_AXI_GPIO_1_DEVICE_ID);

	/* Set the direction for all signals to be outputs */
	XGpio_SetDataDirection(&GpioOutput0, LED_DATA, 0x0);
	XGpio_SetDataDirection(&GpioOutput0, DATA_VALID, 0x0);
	XGpio_SetDataDirection(&GpioOutput1, ADDRESS, 0x0);

	/* Set data valid to zero */
	XGpio_DiscreteWrite(&GpioOutput0, DATA_VALID, 0x0);

	/* Switch off all leds*/
	for (u32 i = 0; i < 400; i++)
	{
	   // Set the GPIO outputs to low
	   XGpio_DiscreteWrite(&GpioOutput1, ADDRESS,    i);
	   XGpio_DiscreteWrite(&GpioOutput0, LED_DATA,   0x000000);
	   XGpio_DiscreteWrite(&GpioOutput0, DATA_VALID, 0x1);
	}
	XGpio_DiscreteWrite(&GpioOutput0, DATA_VALID, 0x0);

	/* Switch on for test*/
	for (u32 i = 0; i < 400; i++)
	{
	   // Set the GPIO outputs to low
	   XGpio_DiscreteWrite(&GpioOutput1, ADDRESS,    i);
	   XGpio_DiscreteWrite(&GpioOutput0, LED_DATA,   0x00FF0F);
	   XGpio_DiscreteWrite(&GpioOutput0, DATA_VALID, 0x1);
	}
	XGpio_DiscreteWrite(&GpioOutput0, DATA_VALID, 0x0);

	while(1)
	{
		GUI_MainFunction();
	}
	Xil_DCacheDisable();
    Xil_ICacheDisable();
	return 0;

}









